input {
 stdin {
    type => "csllog"
  }
  file {
	path => "/opt/jboss/csl/log/*cvm.log"
	sincedb_path => "/Users/kunpatil/projects/elk/logstash-5.3.0/log/sincedb.txt"
	stat_interval => 5
	type => "csllog"
  }
}

filter {
        if "_grokparsefailure" in [tags] {
      drop { }
    }
  grok {
  # Match - CSLLOGTIMESTAMP, one or more space, LOGLEVEL, one or more space, square bracket, JAVACLASS, square bracket, bracket, match one of the following (EntitlementCatalog OR ThreadPool-threadname OR inbound-8080-211 OR inbound-8080-211|R:YmIONrmrKsjVbmrs|pve|1.5.3, bracket, one or more space, Remaining text as logtext 
  match => { "message" => "%{CSLLOGTIMESTAMP:timestamp}\s+%{LOGLEVEL:loglevel}\s+\[%{JAVACLASS:javaclassname}\]\s+\(((?<threadname>EntitlementCatalog)|ThreadPool-%{DATA:threadname}|%{DATA:direction}-%{DATA:inboundport}-%{DATA:threadid}?(\|R:%{DATA:requestid}\|%{DATA:clientid}\|%{DATA:clientversion})?)\)\s+%{GREEDYDATA:logtext}" }
  }
  date {
        match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss,SSS" ]
  }
#  if "com.cox.oss.cvm.util.EntitlementLoaderTask" == [javaclassname] {
#	add_field => [ "threadname" => "EntitlementCatalog" ]	
#  }

}

output {
	if "_grokparsefailure" not in [tags] {
        stdout {
        codec => rubydebug 
        }
		elasticsearch { hosts => ["localhost:9200"] }
	}
	if "_grokparsefailure" in [tags] {
        file {
			codec => rubydebug 
			path => "/Users/kunpatil/projects/elk/logstash-5.3.0/log/logstash-grok-error.log"
        }
	}	
}
